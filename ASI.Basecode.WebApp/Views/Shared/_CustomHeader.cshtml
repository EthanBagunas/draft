@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

<header class="custom-header">
    <!-- Logo Section -->
    <div class="logo-container">
        <div class="logo-icon">
            <img src="~/img/logo-invert.svg" alt="Logo" style="color: var(--background-color1);">
        </div>
    </div>

    <!-- Grid Container with Buttons -->
     <div class="grid-container">
        <a href="@Url.Action("Homepage", "Home")" class="grid-item-button grid-item-container grid-item i" data-focus-id="home">
            <i class="fas fa-home"></i>
        </a>
        <a href="@Url.Action("AdminRoom", "Account")" class="grid-item-button grid-item-container grid-item i" data-focus-id="adminRoom">
            <i class="fa-solid fa-door-open"></i>
        </a>
        <a href="@Url.Action("AccountInfo", "Account")" class="grid-item-button grid-item-container grid-item i" data-focus-id="accountInfo">
            <i class="fas fa-user"></i>
        </a>
        <button class="grid-item-button grid-item-container grid-item i" onclick="showLogoutModal()" data-focus-id="logout">
            <i class="fa-solid fa-right-from-bracket"></i>
        </button>
    </div>

    <!-- Profile Section -->
    <div class="profile">
        <span class="custom-text1">Administrator</span>
        <div class="profile-image profile-image-i">
            <img src="/path/to/profile.jpg" alt="Profile" onerror="this.style.display='none'">
            <i class="fas fa-user-circle"></i>
        </div>
    </div>
</header>

@await Html.PartialAsync("_LogoutModal")

<!-- Add this CSS in your existing styles or in a new style block -->
<style>
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.4);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 30%;
        border-radius: 10px;
        text-align: center;
        border-radius: 30px;
    }

    .modal-buttons {
        margin-top: 20px;
        display: flex;
        justify-content: center;
        gap: 10px;
        width: 40%;
        border-radius: 40px;
    }

    .modal-buttons:focus {
        border:none;
        outline:none;
    }
    .cancel-button {
        padding: 8px 16px;
        background-color: #6c757d;
        color: white;
        border: none;
        border-radius: 40px;
        cursor: pointer;
    }

    .logout-button {
        padding: 8px 16px;
        background-color: #dc3545;
        color: white;
        border: none;
        border-radius: 40px;
        cursor: pointer;
    }

    .cancel-button:hover {
     background-color: #6c757d;
     opacity: 0.8;
     border: none;
     outline: none;
    }
    .logout-button:hover {
     background-color: #dc3545;
     opacity: 0.8;
     border: none;
     outline: none;
    }


</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
    const gridItems = document.querySelectorAll('.grid-item-button');

    const lastFocusedItem = sessionStorage.getItem('lastFocusedItem');
    console.log("Last focused item from sessionStorage:", lastFocusedItem); 
    if (lastFocusedItem) {
        const itemToFocus = document.querySelector(`[data-focus-id="${lastFocusedItem}"]`);
        if (itemToFocus) {
            itemToFocus.classList.add('focused'); 
            itemToFocus.focus(); 
            console.log("Focused item:", itemToFocus); 
        }
    }

    gridItems.forEach(item => {
        const focusId = item.getAttribute('data-focus-id');
        
        item.addEventListener('click', function() {
            if (!item.classList.contains('focused')) {
                gridItems.forEach(i => i.classList.remove('focused'));
                item.classList.add('focused');
                sessionStorage.setItem('lastFocusedItem', focusId);
                console.log("Clicked item:", focusId); 
            }
        });
    });
    });

    function showLogoutModal() {
        document.getElementById('logoutModal').style.display = 'block';
    }

    function closeLogoutModal() {
        document.getElementById('logoutModal').style.display = 'none';
    }

    function confirmLogout() {
        window.location.href = '@Url.Action("SignOutUser", "Account")';
    }

    // Close modal if clicking outside of it
    window.onclick = function(event) {
        var modal = document.getElementById('logoutModal');
        if (event.target == modal) {
            closeLogoutModal();
        }
    }
</script>
